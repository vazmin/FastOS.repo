name: FastCFS Build Action TEST
on: 
  push:
    branches:
      - act-sbuild
jobs:
  build-mudules:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dist: [buster]
        arch: [amd64, arm64]
    env:
      libfastcommon_dir: modules/libfastcommon/source
      libfastcommon_repo: happyfish100/libfastcommon
      libserverframe_dir: modules/libserverframe/source
      libserverframe_repo: happyfish100/libserverframe
      libdiskallocator_dir: modules/libdiskallocator/source
      libdiskallocator_repo: happyfish100/libdiskallocator
      fastcfs_vote_client_dir: modules/fastcfs-vote-client/source
      fastcfs_auth_client_dir: modules/fastcfs-auth-client/source
      fastdir_client_dir: modules/fastdir-client/source
      libfdirstorage_dir: modules/libfdirstorage/source
      libfdirstorage_repo: vazmin/libfdirstorage-mirror
      fastdir_dir: modules/fastdir/source
      fastdir_repo: happyfish100/fastDIR
      faststore_dir: modules/faststore/source
      faststore_repo: happyfish100/faststore
      fastcfs_dir: modules/fastcfs/source
      fastcfs_repo: happyfish100/FastCFS
      dist: dist
    steps:
      - uses: actions/checkout@v3
      - name: set up build env
        run: |
          git config --global user.name "vazmin"
          git config --global user.email "chwingwong@outlook.com"
          curl http://www.fastken.com/aptrepo/packages.fastos.pub | gpg --dearmor > fastos-archive-keyring.gpg
          sudo install -D -o root -g root -m 644 fastos-archive-keyring.gpg /usr/share/keyrings/fastos-archive-keyring.gpg
          sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/fastos-archive-keyring.gpg] http://www.fastken.com/aptrepo/fastos/ fastos main" > /etc/apt/sources.list.d/fastos.list'
          sudo apt-get update
          sudo apt-get install build-essential devscripts sbuild debhelper \
           libfuse3-dev libaio-dev rename -y
          sudo sbuild-adduser $USER
      - name: Gen substvars and Environment variable
        run: |
          . version
          envsubst < mkdeb/substvars.in >> substvars
          envsubst < version >> /tmp/version.out
          sed -i 's/export //g' /tmp/version.out
          echo "$(cat /tmp/version.out)" >> $GITHUB_ENV
          mkdir -p ${{env.dist}}
      - name: Determine build architecture
        run: |
          if [ ${{ matrix.arch }} = "i386" ]; then
              BUILD_ARCH=i386
          else
              BUILD_ARCH=amd64
          fi
          echo "BUILD_ARCH=${BUILD_ARCH}" >> $GITHUB_ENV
      - name: Prepare sbuild environment
        run: sudo ./mkdeb/setup_sbuild.sh ${{ matrix.dist }} ${{ env.BUILD_ARCH }}
      - name: Checkout libfastcommon
        uses: actions/checkout@v3
        with: 
          repository: ${{env.libfastcommon_repo}}
          token: ${{secrets.GITHUB_TOKEN}}
          path: ${{env.libfastcommon_dir}}
          persist-credentials: false
          fetch-depth: 0 
      - name: Build libfastcommon
        run: |
          cd ${{env.libfastcommon_dir}}
          rm debian/source/format
          sudo sbuild \
            --no-run-lintian \
            --host ${{ matrix.arch }} \
            --build ${{ env.BUILD_ARCH }} \
            --dist ${{ matrix.dist }}
      - name: Copy libfastcommon .deb .ddeb to Dist
        run: cp ${{env.libfastcommon_dir}}/../*.*deb  ${{env.dist}}
      - name: Upload binary package artifact 
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: binary-${{ matrix.dist }}-${{ matrix.arch }}
          path: |
            modules/*/*.deb
            modules/*/*.ddeb
      