name: FastCFS Build Action TEST
on: 
  push:
    branches:
      - act-sbuild
jobs:
  build-mudules:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        dist: [buster]
        arch: [amd64, arm64]
    env:
      libfastcommon_dir: modules/libfastcommon/source
      libfastcommon_repo: happyfish100/libfastcommon
      libserverframe_dir: modules/libserverframe/source
      libserverframe_repo: happyfish100/libserverframe
      libdiskallocator_dir: modules/libdiskallocator/source
      libdiskallocator_repo: happyfish100/libdiskallocator
      fastcfs_vote_client_dir: modules/fastcfs-vote-client/source
      fastcfs_auth_client_dir: modules/fastcfs-auth-client/source
      fastdir_client_dir: modules/fastdir-client/source
      libfdirstorage_dir: modules/libfdirstorage/source
      libfdirstorage_repo: vazmin/libfdirstorage-mirror
      fastdir_dir: modules/fastdir/source
      fastdir_repo: happyfish100/fastDIR
      faststore_dir: modules/faststore/source
      faststore_repo: happyfish100/faststore
      fastcfs_dir: modules/fastcfs/source
      fastcfs_repo: happyfish100/FastCFS
      dist: dist
    steps:
      - uses: actions/checkout@v3
      - name: set up build env
        run: |
          git config --global user.name "vazmin"
          git config --global user.email "chwingwong@outlook.com"
          sudo apt-get update -yqq
          sudo apt-get install -yqq --no-install-recommends \
           build-essential devscripts \
           sbuild debhelper schroot debootstrap \
           rename
          # echo "deb [trusted=yes] http://deb.debian.org/debian bullseye-backports main" | sudo tee -a "/etc/apt/sources.list.d/backports.list"
          # sudo apt-get update -yqq
          # sudo apt-get install -yqq --no-install-recommends \
          #  qemu-user-static -t bullseye-backports
          echo "$USER"
          sudo sbuild-adduser $USER
      - name: Gen substvars and Environment variable
        run: |
          . version
          envsubst < mkdeb/substvars.in >> substvars
          envsubst < version >> /tmp/version.out
          sed -i 's/export //g' /tmp/version.out
          echo "$(cat /tmp/version.out)" >> $GITHUB_ENV
          mkdir -p ${{env.dist}}
      # - name: Determine build architecture
      #   run: |
      #     if [ ${{ matrix.arch }} = "i386" ]; then
      #         BUILD_ARCH=i386
      #     else
      #         BUILD_ARCH=amd64
      #     fi
      #     echo "BUILD_ARCH=${BUILD_ARCH}" >> $GITHUB_ENV
      # - name: Prepare sbuild environment
      #   run: |
      #     sudo ./mkdeb/setup_sbuild.sh ${{ matrix.dist }} ${{ matrix.arch }}
      #     sudo schroot -l
      - name: Checkout libfastcommon
        uses: actions/checkout@v3
        with: 
          repository: ${{env.libfastcommon_repo}}
          token: ${{secrets.GITHUB_TOKEN}}
          path: ${{env.libfastcommon_dir}}
          persist-credentials: false
          fetch-depth: 0 
      - name: Build libfastcommon
        run: |
          cd ${{env.libfastcommon_dir}}
          echo '1.0' > debian/source/format
          dpkg-buildpackage -S --no-sign
          cd ..
          cp *.dsc ../../

          # sudo sbuild \
          #   --no-run-lintian \
          #   --purge-deps=never
          #   --arch=${{ matrix.arch }} \
          #   --dist=${{ matrix.dist }} --verbose
      - name: Build Debian package
        uses: vazmin/sbuild-debian-package@main
        id: build-debian-package
        with:
          distro: ${{ matrix.dist }}
          arch: ${{ matrix.arch }}
      - name: Copy libfastcommon .deb .ddeb to Dist
        run: cp ${{env.libfastcommon_dir}}/../*.*deb  ${{env.dist}}
      - name: Upload binary package artifact 
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: binary-${{ matrix.dist }}-${{ matrix.arch }}
          path: |
            modules/*/*.deb
            modules/*/*.ddeb
      